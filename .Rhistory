## Extract rows with Z >= 1.5
attach(DATAFILE)
outliers <- DATAFILE[abs(DATAFILE$Z) >= 1.5, ]
detach(DATAFILE)
write.csv(outliers, "Pre-Subset/Outliers/Pre-subsetExtractedOutliers.csv")
## Count outliers per meta-analysis
sink("Pre-Subset/Outliers/Pre-subset_Outlier_per_input_Meta-analysis_counts.txt")
count(outliers$metaanalysis)
sink()
##Package Installation
if (!require(PerformanceAnalytics)){
install.packages(PerformanceAnalytics)
}
if (!require(plyr)){
install.packages(plyr)
}
if (!require(sfsmisc)){
install.packages(sfsmisc)
}
if (!require(boot)){
install.packages(boot)
}
library(PerformanceAnalytics)
library(plyr)
library(sfsmisc)
library(boot)
##Column Naming
colnames(DATAFILE)<-c( "studyname", "type",
"R", "SEr", "Varr", "Z",
"SEz", "Varz", "metaanalysis",
"species", "n", "n2", "responsevar",
"venue", "treatment", "treatment_category"
)
########################################################
####Effect Size vs. Sample Size, sort-of Funnel Plot####
########################################################
png("Pre-Subset/Pre-subset Effect Size vs. Sample Size.png", width=1200, height=1000)
par(mfrow=c(2,1))
correlatesample<-cbind(log10(DATAFILE$n),DATAFILE$R)
colnames(correlatesample)<-c("ln Sample", "Correlation")
plot(correlatesample, main="Correlation vs. Sample Size")
abline((mean(DATAFILE$R)), 0, col="red")
zsample<-cbind(log10(DATAFILE$n),DATAFILE$Z)
colnames(zsample)<-c("ln Sample", "Fishers_Z")
plot(zsample, main="Z vs. Sample Size")
abline((mean(DATAFILE$Z)), 0, col="red")
###################################################################
##~~~~Summary Data and Pre-treatment Counts Per Meta-Analysis~~~~##
###################################################################
sink("Pre-Subset/Pre-subset_summary_output_by_input_metaanalysis.txt")
Rmeta <- aggregate( R ~ metaanalysis,
DATAFILE,
summary )
print(Rmeta)
Rmetanum <- aggregate( R ~ metaanalysis,
DATAFILE,
length )
print(Rmetanum)
Zmeta <- aggregate( Z ~ metaanalysis,
DATAFILE,
summary )
Zmetanum <- aggregate( Z ~ metaanalysis,
DATAFILE,
length )
print(Zmetanum)
sink()
png("Pre-Subset/Pre-subsetRbymeta.png", width=2000, height=1400)
plot(Rmeta, main="Correlation by Source Meta-Analysis", cex.axis=0.6)
png("Pre-Subset/Pre-subsetZbymeta.png", width=2000, height=1400)
plot(Zmeta, main="Z by Source Meta-Analysis", cex.axis=0.6)
## CSV Output of counts
write.csv(cbind(Rmeta,Zmeta), "Pre-Subset/Pre-subset_datapermeta-analysis.csv")
## Extract rows with Z >= 1.5
attach(DATAFILE)
outliers <- DATAFILE[abs(DATAFILE$Z) >= 1.5, ]
detach(DATAFILE)
write.csv(outliers, "Pre-Subset/Outliers/Pre-subsetExtractedOutliers.csv")
## Count outliers per meta-analysis
sink("Pre-Subset/Outliers/Pre-subset_Outlier_per_input_Meta-analysis_counts.txt")
count(outliers$metaanalysis)
sink()
library(PerformanceAnalytics)
library(plyr)
library(sfsmisc)
library(boot)
## Extract rows with Z >= 1.5
attach(DATAFILE)
outliers <- DATAFILE[abs(DATAFILE$Z) >= 1.5, ]
detach(DATAFILE)
write.csv(outliers, "Pre-Subset/Outliers/Pre-subsetExtractedOutliers.csv")
## Count outliers per meta-analysis
sink("Pre-Subset/Outliers/Pre-subset_Outlier_per_input_Meta-analysis_counts.txt")
count(outliers$metaanalysis)
sink()
DATAFILE <- read.csv("C:/Users/Arthur/Desktop/Analysis/DATAFILE.csv")
View(DATAFILE)
## Extract rows with Z >= 1.5
attach(DATAFILE)
outliers <- DATAFILE[abs(DATAFILE$Z) >= 1.5, ]
detach(DATAFILE)
write.csv(outliers, "Pre-Subset/Outliers/Pre-subsetExtractedOutliers.csv")
## Count outliers per meta-analysis
sink("Pre-Subset/Outliers/Pre-subset_Outlier_per_input_Meta-analysis_counts.txt")
count(outliers$metaanalysis)
sink()
DATAFILE <- read.csv("C:/Users/Arthur/Desktop/Dropbox/effect size group/Analysis/DATAFILE.csv")
View(DATAFILE)
attach(DATAFILE)
Rdata <-aggregate(R, by=list(species, n,
studyname, responsevar,
metaanalysis),
FUN = median)
Zdata <-aggregate(Z, by=list(species, n,
studyname, responsevar,
metaanalysis),
FUN = median)
detach(DATAFILE)
##Column Naming
colnames(DATAFILE)<-c( "studyname", "type",
"R", "SEr", "Varr", "Z",
"SEz", "Varz", "metaanalysis",
"species", "n", "n2", "responsevar",
"venue", "treatment", "treatment_category"
)
attach(DATAFILE)
Rdata <-aggregate(R, by=list(species, n,
studyname, responsevar,
metaanalysis),
FUN = median)
Zdata <-aggregate(Z, by=list(species, n,
studyname, responsevar,
metaanalysis),
FUN = median)
detach(DATAFILE)
hist(medZdata, prob=FALSE, breaks=100, main="Median-Subsetted Z Data", xlab= "Fisher's Z", xlim=c(-2,3), ylim=c(0,50))
abline(v=median(medZdata), col="red")
medRdata <- Rdata[,6]
medZdata <- Zdata[,6]
png("Z w no normal.png", width=1200, height=1000)
hist(medZdata, prob=FALSE, breaks=100, main="Median-Subsetted Z Data", xlab= "Fisher's Z", xlim=c(-2,3), ylim=c(0,50))
abline(v=median(medZdata), col="red")
hist(medZdata, prob=FALSE, breaks=100, main="Median-Subsetted Z Data", xlab= "Fisher's Z", xlim=c(-2,3), ylim=c(0,50))
abline(v=median(medZdata), col="red")
getwd()
par(mar=c(5,5,5,5))
hist(rsqr, prob=FALSE, breaks=100,
main="Median-Subsetted R-squared Data",
xlab= "R-squared",
cex.axis=2, cex.main=2.4, cex.lab=2,
xlim=c(0,1), ylim=c(0,100), col="lightblue", border="white")
abline(v=median(rsqr), col="red",lwd=3)
rsqr<-(medRdata^2)
par(mar=c(5,5,5,5))
hist(rsqr, prob=FALSE, breaks=100,
main="Median-Subsetted R-squared Data",
xlab= "R-squared",
cex.axis=2, cex.main=2.4, cex.lab=2,
xlim=c(0,1), ylim=c(0,100), col="lightblue", border="white")
abline(v=median(rsqr), col="red",lwd=3)
##Presentable Plot
png("Post-Subset/Zdistribution.png", width=1200, height=1000)
hist(medZdata, prob=FALSE, breaks=100, main="Median-Subsetted Z Data", xlab= "Fisher's Z", xlim=c(-2,3), ylim=c(0,50))
abline(v=median(medZdata), col="red")
##Bootstrapping for R
meanFunc <- function(x,i){mean(x[i])}
bootMean <- boot(medRdata ,meanFunc,10000)
sd(bootMean$t)
mean(bootMean$t) - bootMean$t0
quantile(bootMean$t,.025)
quantile(bootMean$t, 0.975)
##BootStrapping for Z
meanFunc <- function(x,i){mean(x[i])}
bootMeanZ <- boot(medZdata ,meanFunc,10000)
sd(bootMeanZ$t)
mean(bootMeanZ$t) - bootMeanZ$t0
quantile(bootMeanZ$t,.025)
quantile(bootMeanZ$t, 0.975)
##Package Installation
if (!require(PerformanceAnalytics)){
install.packages(PerformanceAnalytics)
}
if (!require(plyr)){
install.packages(plyr)
}
if (!require(sfsmisc)){
install.packages(sfsmisc)
}
if (!require(boot)){
install.packages(boot)
}
library(PerformanceAnalytics)
library(plyr)
library(sfsmisc)
library(boot)
##Bootstrapping for R
meanFunc <- function(x,i){mean(x[i])}
bootMean <- boot(medRdata ,meanFunc,10000)
sd(bootMean$t)
mean(bootMean$t) - bootMean$t0
quantile(bootMean$t,.025)
quantile(bootMean$t, 0.975)
##BootStrapping for Z
meanFunc <- function(x,i){mean(x[i])}
bootMeanZ <- boot(medZdata ,meanFunc,10000)
sd(bootMeanZ$t)
mean(bootMeanZ$t) - bootMeanZ$t0
quantile(bootMeanZ$t,.025)
quantile(bootMeanZ$t, 0.975)
sink(Post-Subset/"ConfidenceMeasures.txt")
##K-S statistic, basically the plus-or-minus value for distribution
KSd(length(medRdata))
KSd(length(medZdata))
##Bootstrapping for R
meanFunc <- function(x,i){mean(x[i])}
bootMean <- boot(medRdata ,meanFunc,10000)
#SE
sd(bootMean$t)
##bias
mean(bootMean$t) - bootMean$t0
##lower 95%
quantile(bootMean$t,.025)
##upper
quantile(bootMean$t, 0.975)
##BootStrapping for Z
meanFunc <- function(x,i){mean(x[i])}
bootMeanZ <- boot(medZdata ,meanFunc,10000)
#SE
sd(bootMeanZ$t)
##bias
mean(bootMeanZ$t) - bootMeanZ$t0
##lower 95%
quantile(bootMeanZ$t,.025)
##upper
quantile(bootMeanZ$t, 0.975)
sink()
if (!require(sfsmisc)){
install.packages(sfsmisc)
}
install.packages("sfsmisc")
if (!require(sfsmisc)){
install.packages(sfsmisc)
}
KSd(length(medRdata))
ecdf.ksCI(medZdata)
ecdf.ksCI(medRdata)
KSd(length(medRdata))
KSd(length(medZdata))
sink(Post-Subset/"ConfidenceMeasures.txt")
##K-S statistic, basically the plus-or-minus value for distribution
KSd(length(medRdata))
KSd(length(medZdata))
##Bootstrapping for R
meanFunc <- function(x,i){mean(x[i])}
bootMean <- boot(medRdata ,meanFunc,10000)
#SE
sd(bootMean$t)
##bias
mean(bootMean$t) - bootMean$t0
##lower 95%
quantile(bootMean$t,.025)
##upper
quantile(bootMean$t, 0.975)
##BootStrapping for Z
meanFunc <- function(x,i){mean(x[i])}
bootMeanZ <- boot(medZdata ,meanFunc,10000)
#SE
sd(bootMeanZ$t)
##bias
mean(bootMeanZ$t) - bootMeanZ$t0
##lower 95%
quantile(bootMeanZ$t,.025)
##upper
quantile(bootMeanZ$t, 0.975)
sink()
sink("Post-Subset/ConfidenceMeasures.txt")
##K-S statistic, basically the plus-or-minus value for distribution
KSd(length(medRdata))
KSd(length(medZdata))
##Bootstrapping for R
meanFunc <- function(x,i){mean(x[i])}
bootMean <- boot(medRdata ,meanFunc,10000)
#SE
sd(bootMean$t)
##bias
mean(bootMean$t) - bootMean$t0
##lower 95%
quantile(bootMean$t,.025)
##upper
quantile(bootMean$t, 0.975)
##BootStrapping for Z
meanFunc <- function(x,i){mean(x[i])}
bootMeanZ <- boot(medZdata ,meanFunc,10000)
#SE
sd(bootMeanZ$t)
##bias
mean(bootMeanZ$t) - bootMeanZ$t0
##lower 95%
quantile(bootMeanZ$t,.025)
##upper
quantile(bootMeanZ$t, 0.975)
sink()
sink("Post-Subset/ConfidenceMeasures.txt")
##K-S statistic, basically the plus-or-minus value for distribution
KSd(length(medRdata))
KSd(length(medZdata))
##Bootstrapping for R
meanFunc <- function(x,i){mean(x[i])}
bootMean <- boot(medRdata ,meanFunc,10000)
#SE
sd(bootMean$t)
##bias
mean(bootMean$t) - bootMean$t0
##lower 95%
quantile(bootMean$t,.025)
##upper
quantile(bootMean$t, 0.975)
##BootStrapping for Z
meanFunc <- function(x,i){mean(x[i])}
bootMeanZ <- boot(medZdata ,meanFunc,10000)
#SE
sd(bootMeanZ$t)
##bias
mean(bootMeanZ$t) - bootMeanZ$t0
##lower 95%
quantile(bootMeanZ$t,.025)
##upper
quantile(bootMeanZ$t, 0.975)
sink()
png("Post-Subset/Zdistribution.png", width=1200, height=1000)
hist(medZdata, prob=FALSE, breaks=100, main="Median-Subsetted Z Data", xlab= "Fisher's Z", xlim=c(-2,3), ylim=c(0,50))
abline(v=median(medZdata), col="red")
sink("Post-Subset/ConfidenceMeasures.txt")
##K-S statistic
cat("D for R")
KSd(length(medRdata))
cat("D for Z")
KSd(length(medZdata))
##Bootstrapping for R
meanFunc <- function(x,i){mean(x[i])}
bootMean <- boot(medRdata ,meanFunc,10000)
#SE
cat("Correlation")
cat("SE")
sd(bootMean$t)
##bias
cat("Bias")
mean(bootMean$t) - bootMean$t0
##lower 95%
cat("lower 95%")
quantile(bootMean$t,.025)
cat("upper 95%")
##upper
quantile(bootMean$t, 0.975)
##BootStrapping for Z
meanFunc <- function(x,i){mean(x[i])}
bootMeanZ <- boot(medZdata ,meanFunc,10000)
#SE
cat("Z")
cat("SE")
sd(bootMeanZ$t)
##bias
cat("Bias")
mean(bootMeanZ$t) - bootMeanZ$t0
##lower 95%
cat("lower 95%")
quantile(bootMeanZ$t,.025)
##upper
cat("upper 95%")
quantile(bootMeanZ$t, 0.975)
sink()
##Package Installation
if (!require(PerformanceAnalytics)){
install.packages(PerformanceAnalytics)
}
if (!require(plyr)){
install.packages(plyr)
}
if (!require(sfsmisc)){
install.packages(sfsmisc)
}
if (!require(boot)){
install.packages(boot)
}
library(PerformanceAnalytics)
library(plyr)
library(sfsmisc)
library(boot)
sink("Post-Subset/ConfidenceMeasures.txt")
##K-S statistic
cat("D for R")
KSd(length(medRdata))
cat("D for Z")
KSd(length(medZdata))
##Bootstrapping for R
meanFunc <- function(x,i){mean(x[i])}
bootMean <- boot(medRdata ,meanFunc,10000)
#SE
cat("Correlation")
cat("SE")
sd(bootMean$t)
##bias
cat("Bias")
mean(bootMean$t) - bootMean$t0
##lower 95%
cat("lower 95%")
quantile(bootMean$t,.025)
cat("upper 95%")
##upper
quantile(bootMean$t, 0.975)
##BootStrapping for Z
meanFunc <- function(x,i){mean(x[i])}
bootMeanZ <- boot(medZdata ,meanFunc,10000)
#SE
cat("Z")
cat("SE")
sd(bootMeanZ$t)
##bias
cat("Bias")
mean(bootMeanZ$t) - bootMeanZ$t0
##lower 95%
cat("lower 95%")
quantile(bootMeanZ$t,.025)
##upper
cat("upper 95%")
quantile(bootMeanZ$t, 0.975)
sink()
